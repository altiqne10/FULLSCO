import { useState, useEffect } from 'react';
import Link from 'next/link';
import { GetServerSideProps } from 'next';
import MainLayout from '../components/layout/MainLayout';
import { useSiteSettings } from '../contexts/site-settings-context';
import { ArrowRight, Search, GraduationCap, Globe, BookOpen, Award, ArrowDown } from 'lucide-react';

// ุชุนุฑูู ุฃููุงุน ุงูุจูุงูุงุช
interface Category {
  id: number;
  name: string;
  slug: string;
  description?: string;
  scholarshipCount?: number;
}

interface Country {
  id: number;
  name: string;
  slug: string;
  flagUrl?: string;
  scholarshipCount?: number;
}

interface Scholarship {
  id: number;
  title: string;
  slug: string;
  description?: string;
  image_url?: string;
  deadline?: string;
  amount?: string;
  currency?: string;
  university?: string;
  is_featured?: boolean;
  is_fully_funded?: boolean;
  country_id?: number;
  level_id?: number;
  category_id?: number;
  country?: { id: number; name: string; slug: string; };
  category?: { id: number; name: string; slug: string; };
  level?: { id: number; name: string; slug: string; };
}

interface HomePageProps {
  categories: Category[];
  countries: Country[];
  featuredScholarships: Scholarship[];
}

export default function HomePage({ categories, countries, featuredScholarships }: HomePageProps) {
  const { siteSettings } = useSiteSettings();
  const [searchQuery, setSearchQuery] = useState('');
  
  // ุนุฑุถ ูู ูุญุฏุฉ ุงูุชุญูู ููุญุต ุงูุจูุงูุงุช (ููุชุทููุฑ ููุท)
  useEffect(() => {
    if (process.env.NODE_ENV === 'development') {
      console.log('Categories:', categories);
      console.log('Countries:', countries);
      console.log('Featured Scholarships:', featuredScholarships);
    }
  }, [categories, countries, featuredScholarships]);
  
  // ููุงุทุน ุชูุฑูุฑ ููุฃูุณุงู
  const scrollToSection = (id: string) => {
    const element = document.getElementById(id);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
    }
  };
  
  return (
    <MainLayout
      title="ุงูุฑุฆูุณูุฉ"
      description="ุงุณุชูุดู ุฃูุถู ุงูููุญ ุงูุฏุฑุงุณูุฉ ูุงููุฑุต ุงูุชุนููููุฉ ุญูู ุงูุนุงูู"
    >
      {/* ูุณู ุงูุจุทู */}
      <section className="relative py-20 md:py-28">
        {/* ุงูุฎูููุฉ */}
        <div className="absolute inset-0 bg-gradient-to-r from-blue-900 to-blue-700 opacity-90"></div>
        
        {/* ุงููุญุชูู */}
        <div className="container relative z-10 text-white">
          <div className="max-w-3xl mx-auto text-center">
            <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 animate-fade-in">
              {siteSettings?.siteTagline || 'ุงูุชุดู ุงูุถู ูุฑุต ุงูููุญ ุงูุฏุฑุงุณูุฉ ุญูู ุงูุนุงูู'}
            </h1>
            
            <p className="text-lg md:text-xl opacity-90 mb-8 animate-slide-up">
              ููุฏู ูุฌููุนุฉ ุดุงููุฉ ูู ุงูููุญ ุงูุฏุฑุงุณูุฉ ููุทูุงุจ ูู ุฌููุน ุฃูุญุงุก ุงูุนุงูู.
              ุงุจุญุซ ุนู ุงูููุญุฉ ุงูููุงุณุจุฉ ูู ูุงุจุฏุฃ ุฑุญูุชู ุงูุชุนููููุฉ.
            </p>
            
            {/* ุตูุฏูู ุงูุจุญุซ */}
            <div className="relative max-w-2xl mx-auto mb-12 animate-fade-in" style={{ animationDelay: '0.3s' }}>
              <form 
                className="flex flex-col md:flex-row" 
                onSubmit={(e) => {
                  e.preventDefault();
                  if (searchQuery.trim()) {
                    window.location.href = `/scholarships?search=${encodeURIComponent(searchQuery.trim())}`;
                  }
                }}
              >
                <div className="relative flex-grow mb-3 md:mb-0">
                  <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400" />
                  <input
                    type="text"
                    className="w-full py-4 px-5 pr-14 rounded-lg md:rounded-r-none text-gray-800 border-0 focus:ring-2 focus:ring-blue-500"
                    placeholder="ุงุจุญุซ ุนู ููุญ ุฏุฑุงุณูุฉุ ุฌุงูุนุงุชุ ุชุฎุตุตุงุช..."
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                  />
                </div>
                <button
                  type="submit"
                  className="bg-gradient-to-r from-amber-500 to-amber-600 hover:from-amber-600 hover:to-amber-700 text-white font-bold py-4 px-8 rounded-lg md:rounded-l-none transition-all"
                >
                  ุจุญุซ
                </button>
              </form>
            </div>
            
            {/* ููุฒุงุช ุณุฑูุนุฉ */}
            <div className="flex flex-wrap justify-center gap-6 mt-8 animate-fade-in" style={{ animationDelay: '0.6s' }}>
              <div className="flex items-center">
                <GraduationCap className="h-6 w-6 mr-2" />
                <span>+10,000 ููุญุฉ ุฏุฑุงุณูุฉ</span>
              </div>
              <div className="flex items-center">
                <Globe className="h-6 w-6 mr-2" />
                <span>+100 ุฏููุฉ ุญูู ุงูุนุงูู</span>
              </div>
              <div className="flex items-center">
                <BookOpen className="h-6 w-6 mr-2" />
                <span>ูุงูุฉ ุงููุณุชููุงุช ุงูุฏุฑุงุณูุฉ</span>
              </div>
            </div>
          </div>
        </div>
        
        {/* ุณูู ุงูุชูุฑูุฑ ูุฃุณูู */}
        <div className="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce hidden md:block">
          <button
            onClick={() => scrollToSection('categories')}
            className="bg-white bg-opacity-20 text-white p-3 rounded-full hover:bg-opacity-30 transition-colors"
            aria-label="ุชูุฑูุฑ ูุฃุณูู"
          >
            <ArrowDown className="h-6 w-6" />
          </button>
        </div>
      </section>
      
      {/* ูุณู ุงูุฅุญุตุงุฆูุงุช */}
      <section className="py-12 bg-gray-50 dark:bg-gray-900 border-b border-gray-200 dark:border-gray-800">
        <div className="container">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-6 md:gap-8 text-center">
            <div className="p-6 bg-white dark:bg-gray-800 rounded-xl shadow-sm">
              <div className="text-3xl md:text-4xl font-bold text-blue-600 mb-2">10,000+</div>
              <div className="text-gray-600 dark:text-gray-300">ููุญุฉ ุฏุฑุงุณูุฉ</div>
            </div>
            <div className="p-6 bg-white dark:bg-gray-800 rounded-xl shadow-sm">
              <div className="text-3xl md:text-4xl font-bold text-amber-500 mb-2">110+</div>
              <div className="text-gray-600 dark:text-gray-300">ุฏููุฉ ูุณุชุถููุฉ</div>
            </div>
            <div className="p-6 bg-white dark:bg-gray-800 rounded-xl shadow-sm">
              <div className="text-3xl md:text-4xl font-bold text-green-600 mb-2">50+</div>
              <div className="text-gray-600 dark:text-gray-300">ุชุฎุตุต ุฏุฑุงุณู</div>
            </div>
            <div className="p-6 bg-white dark:bg-gray-800 rounded-xl shadow-sm">
              <div className="text-3xl md:text-4xl font-bold text-purple-600 mb-2">25,000+</div>
              <div className="text-gray-600 dark:text-gray-300">ุทุงูุจ ูุณุชููุฏ</div>
            </div>
          </div>
        </div>
      </section>
      
      {/* ูุณู ุงูุชุตูููุงุช */}
      <section id="categories" className="py-16 bg-white dark:bg-gray-800">
        <div className="container">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">ุงุณุชูุดู ุญุณุจ ุงูุชุตููู</h2>
            <p className="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
              ุชุตูุญ ุงูููุญ ุงูุฏุฑุงุณูุฉ ุญุณุจ ุงูุชุตูููุงุช ุงููุฎุชููุฉ ููุนุซูุฑ ุนูู ุงููุฑุตุฉ ุงูููุงุณุจุฉ ูุงุญุชูุงุฌุงุชู ูุงูุชูุงูุงุชู
            </p>
          </div>
          
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {/* ุนุฑุถ ุงูุชุตูููุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช */}
            {categories && categories.length > 0 ? categories.map((category) => {
              // ุฅูุดุงุก ุฑูุฒ ุชุนุจูุฑู ุงุณุชูุงุฏูุง ุฅูู ุงุณู ุงูุชุตููู
              let icon = '๐'; // ุฑูุฒ ุงูุชุฑุงุถู
              
              if (category.name.includes('ููุฏุณ')) icon = '๐๏ธ';
              else if (category.name.includes('ุทุจ') || category.name.includes('ุตุญ')) icon = '๐ฅ';
              else if (category.name.includes('ุญุงุณุจ') || category.name.includes('ุชููู')) icon = '๐ป';
              else if (category.name.includes('ุฃุนูุงู') || category.name.includes('ุฅุฏุงุฑ')) icon = '๐';
              else if (category.name.includes('ุนููู') || category.name.includes('ุจุญุซ')) icon = '๐ฌ';
              else if (category.name.includes('ูู') || category.name.includes('ุชุตููู')) icon = '๐จ';
              else if (category.name.includes('ูุงููู') || category.name.includes('ุญููู')) icon = 'โ๏ธ';
              
              return (
                <Link
                  key={category.id}
                  href={`/categories/${category.slug}`}
                  className="block bg-gray-50 dark:bg-gray-700 rounded-xl p-6 hover:shadow-md transition-shadow text-center card-hover"
                >
                  <div className="text-4xl mb-3">{icon}</div>
                  <h3 className="font-bold mb-1">{category.name}</h3>
                  <p className="text-gray-500 dark:text-gray-400 text-sm">
                    {category.scholarshipCount || 0} ููุญุฉ
                  </p>
                </Link>
              );
            }) : Array(8).fill(0).map((_, index) => (
              // ุนูุตุฑ ุชุญููู
              <div key={index} className="block bg-gray-50 dark:bg-gray-700 rounded-xl p-6 animate-pulse">
                <div className="h-16 w-16 mx-auto mb-3 bg-gray-200 dark:bg-gray-600 rounded-full"></div>
                <div className="h-5 bg-gray-200 dark:bg-gray-600 rounded w-2/3 mx-auto mb-2"></div>
                <div className="h-4 bg-gray-200 dark:bg-gray-600 rounded w-1/3 mx-auto"></div>
              </div>
            ))}
          </div>
          
          <div className="text-center mt-10">
            <Link
              href="/categories"
              className="inline-flex items-center text-blue-600 hover:text-blue-700 font-medium"
            >
              ุนุฑุถ ุฌููุน ุงูุชุตูููุงุช
              <ArrowRight className="mr-2 h-4 w-4 rtl-mirror" />
            </Link>
          </div>
        </div>
      </section>
      
      {/* ูุณู ุงูููุญ ุงููููุฒุฉ */}
      <section className="py-16 bg-gray-50 dark:bg-gray-900">
        <div className="container">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">ุฃุญุฏุซ ุงูููุญ ุงูุฏุฑุงุณูุฉ</h2>
            <p className="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
              ุงุณุชูุดู ุฃุญุฏุซ ุงูููุญ ุงูุฏุฑุงุณูุฉ ุงููุชุงุญุฉ ููุฎุชูู ุงูุชุฎุตุตุงุช ูุงููุณุชููุงุช ุงูุฏุฑุงุณูุฉ
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {/* ุนุฑุถ ุงูููุญ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช */}
            {featuredScholarships && featuredScholarships.length > 0 ? featuredScholarships.map((scholarship) => (
              <Link
                key={scholarship.id}
                href={`/scholarships/${scholarship.slug}`}
                className="block bg-white dark:bg-gray-800 rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-shadow card-hover"
              >
                <div className="h-48 bg-gray-200 dark:bg-gray-700 relative">
                  {scholarship.image_url ? (
                    <div 
                      className="absolute inset-0 bg-center bg-cover"
                      style={{ backgroundImage: `url(${scholarship.image_url})` }}
                    ></div>
                  ) : (
                    <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-blue-700"></div>
                  )}
                  
                  <div 
                    className="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent"
                  ></div>
                  
                  {scholarship.is_featured && (
                    <div className="absolute top-4 right-4 bg-amber-500 text-white text-xs px-2 py-1 rounded">
                      ููุญุฉ ูููุฒุฉ
                    </div>
                  )}
                  
                  {scholarship.country && (
                    <div className="absolute bottom-4 left-4 text-white">
                      <div className="text-sm font-medium">
                        <Globe className="inline-block w-4 h-4 ml-1" />
                        {scholarship.country.name}
                      </div>
                    </div>
                  )}
                </div>
                
                <div className="p-6">
                  <h3 className="font-bold text-lg mb-2 line-clamp-2">{scholarship.title}</h3>
                  
                  <div className="flex flex-wrap gap-2 mb-3">
                    {scholarship.category && (
                      <span className="text-xs bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-100 px-2 py-1 rounded">
                        {scholarship.category.name}
                      </span>
                    )}
                    {scholarship.level && (
                      <span className="text-xs bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-100 px-2 py-1 rounded">
                        {scholarship.level.name}
                      </span>
                    )}
                  </div>
                  
                  <div className="flex justify-between items-center text-sm border-t pt-3">
                    <span className="text-gray-600 dark:text-gray-400">
                      <Award className="inline-block w-4 h-4 ml-1" />
                      {scholarship.is_fully_funded ? 'ููููุฉ ุจุงููุงูู' : 'ููุญุฉ ุฌุฒุฆูุฉ'}
                    </span>
                    {scholarship.deadline && (
                      <span>
                        <span className="text-gray-500 dark:text-gray-400">ุขุฎุฑ ููุนุฏ: </span>
                        <span className="font-medium">
                          {new Date(scholarship.deadline).toLocaleDateString('ar-EG')}
                        </span>
                      </span>
                    )}
                  </div>
                </div>
              </Link>
            )) : Array(6).fill(0).map((_, index) => (
              // ุนูุตุฑ ุชุญููู
              <div key={index} className="block bg-white dark:bg-gray-800 rounded-xl overflow-hidden shadow-sm animate-pulse">
                <div className="h-48 bg-gray-200 dark:bg-gray-700"></div>
                <div className="p-6">
                  <div className="h-6 bg-gray-200 dark:bg-gray-700 rounded w-3/4 mb-4"></div>
                  <div className="flex gap-2 mb-4">
                    <div className="h-5 w-16 bg-gray-200 dark:bg-gray-700 rounded"></div>
                    <div className="h-5 w-16 bg-gray-200 dark:bg-gray-700 rounded"></div>
                  </div>
                  <div className="h-4 mt-4 pt-4 border-t flex justify-between">
                    <div className="h-4 w-20 bg-gray-200 dark:bg-gray-700 rounded"></div>
                    <div className="h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded"></div>
                  </div>
                </div>
              </div>
            ))}
          </div>
          
          <div className="text-center mt-10">
            <Link
              href="/scholarships"
              className="inline-block px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors"
            >
              ุนุฑุถ ุฌููุน ุงูููุญ ุงูุฏุฑุงุณูุฉ
            </Link>
          </div>
        </div>
      </section>
      
      {/* ูุณู ุงูุฏูู ุงููููุฒุฉ */}
      <section className="py-16 bg-white dark:bg-gray-800">
        <div className="container">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">ุงูุฏูู ุงูุฃูุซุฑ ุงุณุชุถุงูุฉ ููููุญ</h2>
            <p className="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
              ุงูุชุดู ุฃูุถู ุงูุฏูู ุงูุชู ุชููุฑ ูุฑุต ุชุนููููุฉ ูุชููุฒุฉ ููุทูุงุจ ุงูุฏููููู
            </p>
          </div>
          
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {/* ุนุฑุถ ุงูุฏูู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช */}
            {countries && countries.length > 0 ? countries.map((country) => {
              // ุฅูุดุงุก ุนูู ุงุณุชูุงุฏูุง ุฅูู ุงุณู ุงูุฏููุฉ
              let flag = '๐'; // ุนูู ุงูุชุฑุงุถู
              
              if (country.name.includes('ุฃูุฑูู') || country.name.includes('ุงูููุงูุงุช ุงููุชุญุฏุฉ')) flag = '๐บ๐ธ';
              else if (country.name.includes('ุจุฑูุทุงูู') || country.name.includes('ุงูููููุฉ ุงููุชุญุฏุฉ')) flag = '๐ฌ๐ง';
              else if (country.name.includes('ุฃููุงููุง')) flag = '๐ฉ๐ช';
              else if (country.name.includes('ููุฏุง')) flag = '๐จ๐ฆ';
              else if (country.name.includes('ุฃุณุชุฑุงูู')) flag = '๐ฆ๐บ';
              else if (country.name.includes('ูุฑูุณุง')) flag = '๐ซ๐ท';
              else if (country.name.includes('ุงููุงุจุงู')) flag = '๐ฏ๐ต';
              else if (country.name.includes('ููููุฏุง')) flag = '๐ณ๐ฑ';
              else if (country.name.includes('ุฅูุทุงููุง')) flag = '๐ฎ๐น';
              else if (country.name.includes('ุฅุณุจุงููุง')) flag = '๐ช๐ธ';
              else if (country.name.includes('ุงูุตูู')) flag = '๐จ๐ณ';
              else if (country.name.includes('ุฑูุณูุง')) flag = '๐ท๐บ';
              else if (country.name.includes('ุณูุบุงููุฑุฉ')) flag = '๐ธ๐ฌ';
              else if (country.name.includes('ูุงููุฒูุง')) flag = '๐ฒ๐พ';
              else if (country.name.includes('ุงูููุฏ')) flag = '๐ฎ๐ณ';
              
              return (
                <Link
                  key={country.id}
                  href={`/countries/${country.slug}`}
                  className="block bg-gray-50 dark:bg-gray-700 rounded-xl p-6 hover:shadow-md transition-shadow text-center card-hover"
                >
                  <div className="text-4xl mb-3">{flag}</div>
                  <h3 className="font-bold mb-1">{country.name}</h3>
                  <p className="text-gray-500 dark:text-gray-400 text-sm">
                    {country.scholarshipCount || 0} ููุญุฉ
                  </p>
                </Link>
              );
            }) : Array(8).fill(0).map((_, index) => (
              // ุนูุตุฑ ุชุญููู
              <div key={index} className="block bg-gray-50 dark:bg-gray-700 rounded-xl p-6 animate-pulse">
                <div className="h-16 w-16 mx-auto mb-3 bg-gray-200 dark:bg-gray-600 rounded-full"></div>
                <div className="h-5 bg-gray-200 dark:bg-gray-600 rounded w-2/3 mx-auto mb-2"></div>
                <div className="h-4 bg-gray-200 dark:bg-gray-600 rounded w-1/3 mx-auto"></div>
              </div>
            ))}
          </div>
          
          <div className="text-center mt-10">
            <Link
              href="/countries"
              className="inline-flex items-center text-blue-600 hover:text-blue-700 font-medium"
            >
              ุนุฑุถ ุฌููุน ุงูุฏูู
              <ArrowRight className="mr-2 h-4 w-4 rtl-mirror" />
            </Link>
          </div>
        </div>
      </section>
      
      {/* ูุณู ุฏููู ุงูููุญ */}
      <section className="py-16 bg-gradient-to-r from-blue-800 to-blue-900 text-white">
        <div className="container">
          <div className="flex flex-col md:flex-row items-center justify-between gap-8">
            <div className="md:w-1/2">
              <h2 className="text-3xl font-bold mb-4">ุฏููู ุงูุชูุฏูู ููููุญ ุงูุฏุฑุงุณูุฉ</h2>
              <p className="mb-6 opacity-90">
                ุงูุชุดู ููููุฉ ุงูุชูุฏูู ููููุญ ุงูุฏุฑุงุณูุฉ ุจูุฌุงุญ. ุฏููููุง ุงูุดุงูู ุณูุณุงุนุฏู ุนูู ููู ุงูุนูููุฉ ุฎุทูุฉ ุจุฎุทูุฉ ูุฒูุงุฏุฉ ูุฑุตู ูู ุงูุญุตูู ุนูู ุงูููุญ.
              </p>
              
              <div className="space-y-4">
                <div className="flex items-start">
                  <div className="bg-blue-700 rounded-full h-8 w-8 flex items-center justify-center mr-3 flex-shrink-0">1</div>
                  <div>
                    <h3 className="font-medium">ุงูุจุญุซ ุนู ุงูููุญ ุงูููุงุณุจุฉ</h3>
                    <p className="text-sm opacity-80">ุชุนุฑู ุนูู ููููุฉ ุงูุจุญุซ ุนู ุงูููุญ ุงูููุงุณุจุฉ ูุชุฎุตุตู ููุคููุงุชู</p>
                  </div>
                </div>
                
                <div className="flex items-start">
                  <div className="bg-blue-700 rounded-full h-8 w-8 flex items-center justify-center mr-3 flex-shrink-0">2</div>
                  <div>
                    <h3 className="font-medium">ุชุฌููุฒ ุงููุณุชูุฏุงุช ุงููุทููุจุฉ</h3>
                    <p className="text-sm opacity-80">ุชุนุฑู ุนูู ุงููุณุชูุฏุงุช ุงููุทููุจุฉ ูููููุฉ ุชุฌููุฒูุง ุจุดูู ุงุญุชุฑุงูู</p>
                  </div>
                </div>
                
                <div className="flex items-start">
                  <div className="bg-blue-700 rounded-full h-8 w-8 flex items-center justify-center mr-3 flex-shrink-0">3</div>
                  <div>
                    <h3 className="font-medium">ูุชุงุจุฉ ููุงู ุชูุงูุณู</h3>
                    <p className="text-sm opacity-80">ุชุนูู ููููุฉ ูุชุงุจุฉ ููุงู ููู ูุฒูุฏ ูู ูุฑุตู ูู ุงูุญุตูู ุนูู ุงูููุญุฉ</p>
                  </div>
                </div>
                
                <div className="flex items-start">
                  <div className="bg-blue-700 rounded-full h-8 w-8 flex items-center justify-center mr-3 flex-shrink-0">4</div>
                  <div>
                    <h3 className="font-medium">ุงุฌุชูุงุฒ ุงูููุงุจูุฉ ุงูุดุฎุตูุฉ</h3>
                    <p className="text-sm opacity-80">ูุตุงุฆุญ ูุฅุฑุดุงุฏุงุช ูุงุฌุชูุงุฒ ุงูููุงุจูุฉ ุงูุดุฎุตูุฉ ุจูุฌุงุญ</p>
                  </div>
                </div>
              </div>
              
              <Link
                href="/guides/scholarships"
                className="inline-block mt-8 px-6 py-3 bg-white text-blue-800 font-medium rounded-lg hover:bg-gray-100 transition-colors"
              >
                ูุฑุงุกุฉ ุงูุฏููู ุงููุงูู
              </Link>
            </div>
            
            <div className="md:w-1/2">
              <div className="bg-white bg-opacity-10 p-8 rounded-xl backdrop-blur-sm">
                <h3 className="text-xl font-bold mb-4">ูุตุงุฆุญ ุณุฑูุนุฉ ููุชูุฏูู</h3>
                
                <ul className="space-y-3">
                  <li className="flex items-start">
                    <svg className="h-5 w-5 text-green-400 checkmark-icon mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                    <span>ุงุจุฏุฃ ุงูุจุญุซ ูุจูุฑุงู ูุจู ุงูููุงุนูุฏ ุงูููุงุฆูุฉ ุจููุช ูุงู</span>
                  </li>
                  <li className="flex items-start">
                    <svg className="h-5 w-5 text-green-400 checkmark-icon mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                    <span>ุชุฃูุฏ ูู ุงุณุชููุงุก ุฌููุน ุงูุดุฑูุท ูุจู ุงูุชูุฏูู</span>
                  </li>
                  <li className="flex items-start">
                    <svg className="h-5 w-5 text-green-400 checkmark-icon mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                    <span>ุงุทูุจ ุฎุทุงุจุงุช ุชูุตูุฉ ูู ุฃุณุงุชุฐุฉ ูุชููุฒูู</span>
                  </li>
                  <li className="flex items-start">
                    <svg className="h-5 w-5 text-green-400 checkmark-icon mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                    <span>ุงูุชุจ ููุงูุงู ุดุฎุตูุงู ูุฑูุฏุงู ูุนุจุฑ ุนู ุดุฎุตูุชู ูุฃูุฏุงูู</span>
                  </li>
                  <li className="flex items-start">
                    <svg className="h-5 w-5 text-green-400 checkmark-icon mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                    <span>ุชุฏุฑุจ ุนูู ุงูููุงุจูุงุช ุงูุดุฎุตูุฉ ูุน ุฃุตุฏูุงุก ุฃู ุฃุณุงุชุฐุฉ</span>
                  </li>
                  <li className="flex items-start">
                    <svg className="h-5 w-5 text-green-400 checkmark-icon mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                    <span>ูู ุจุชูุฏูู ุทูุจุงุช ูุนุฏุฉ ููุญ ูุฒูุงุฏุฉ ูุฑุตู</span>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </section>
      
      {/* ูุณู ุงููุดุฑุฉ ุงูุจุฑูุฏูุฉ */}
      <section className="py-16 bg-gray-50 dark:bg-gray-900">
        <div className="container">
          <div className="max-w-2xl mx-auto text-center">
            <h2 className="text-3xl font-bold mb-4">ุงุดุชุฑู ูู ุงููุดุฑุฉ ุงูุจุฑูุฏูุฉ</h2>
            <p className="text-gray-600 dark:text-gray-400 mb-8">
              ุงุญุตู ุนูู ุฃุญุฏุซ ุงูููุญ ุงูุฏุฑุงุณูุฉ ููุฑุต ุงูุชุนููู ูุจุงุดุฑุฉ ูู ุจุฑูุฏู ุงูุฅููุชุฑููู
            </p>
            
            <form className="flex flex-col sm:flex-row gap-3">
              <input
                type="email"
                placeholder="ุฃุฏุฎู ุจุฑูุฏู ุงูุฅููุชุฑููู"
                className="flex-grow py-3 px-4 rounded-lg border border-gray-300 dark:border-gray-600 dark:bg-gray-800 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                required
              />
              <button
                type="submit"
                className="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors"
              >
                ุงุดุชุฑุงู
              </button>
            </form>
            
            <p className="text-xs text-gray-500 dark:text-gray-400 mt-4">
              ูู ูููู ุจูุดุงุฑูุฉ ุจุฑูุฏู ุงูุฅููุชุฑููู ูุน ุฃู ุฌูุฉ ุฎุงุฑุฌูุฉ.
              ููููู ุฅูุบุงุก ุงูุงุดุชุฑุงู ูู ุฃู ููุช.
            </p>
          </div>
        </div>
      </section>
    </MainLayout>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  try {
    console.log('Starting getServerSideProps...');
    
    // ุฅูุดุงุก ูุธููุฉ ููุชุนุงูู ูุน ุงูุฃุฎุทุงุก ุจุดูู ุขูู
    const safeObjectEntries = (obj: any) => {
      if (!obj || typeof obj !== 'object') {
        console.warn('WARNING: Attempting to use Object.entries on non-object:', obj);
        return [];
      }
      return Object.entries(obj);
    };
    // ุงุณุชูุฑุงุฏ ุงููุญุฏุงุช ุงููุงุฒูุฉ
    const { db } = await import('../db');
    const { sql, desc } = await import('drizzle-orm');
    const { categories, countries, scholarships, levels } = await import('../shared/schema');

    // ุฌูุจ ุงูุชุตูููุงุช ูุน ุนุฏุฏ ุงูููุญ ุงูุฏุฑุงุณูุฉ ููู ุชุตููู
    const categoriesWithCount = await db
      .select({
        id: categories.id,
        name: categories.name,
        slug: categories.slug,
        description: categories.description,
        scholarshipCount: sql`count(${scholarships.id})`.mapWith(Number),
      })
      .from(categories)
      .leftJoin(scholarships, sql`${scholarships.categoryId} = ${categories.id}`)
      .groupBy(categories.id)
      .orderBy(sql`count(${scholarships.id}) DESC`)
      .limit(8);

    // ุฌูุจ ุงูุฏูู ูุน ุนุฏุฏ ุงูููุญ ุงูุฏุฑุงุณูุฉ ููู ุฏููุฉ
    const countriesWithCount = await db
      .select({
        id: countries.id,
        name: countries.name,
        slug: countries.slug,
        flagUrl: countries.flagUrl,
        scholarshipCount: sql`count(${scholarships.id})`.mapWith(Number),
      })
      .from(countries)
      .leftJoin(scholarships, sql`${scholarships.countryId} = ${countries.id}`)
      .groupBy(countries.id)
      .orderBy(sql`count(${scholarships.id}) DESC`)
      .limit(8);

    // ุฌูุจ ุงูููุญ ุงูุฏุฑุงุณูุฉ ุงููููุฒุฉ ูุน ุงูุชุตูููุงุช ูุงูุฏูู ูุงููุณุชููุงุช ุงููุฑุชุจุทุฉ ุจูุง
    const featuredScholarshipsQuery = await db
      .select()
      .from(scholarships)
      .where(sql`${scholarships.isFeatured} = true AND ${scholarships.isPublished} = true`)
      .orderBy(sql`${scholarships.createdAt} DESC`)
      .limit(6);

    // ุฌูุจ ุงููุนูููุงุช ุงูููุตูุฉ ููููุญ ุงูุฏุฑุงุณูุฉ (ุงูุชุตูููุ ุงูุฏููุฉุ ุงููุณุชูู)
    const featuredScholarshipsPromises = featuredScholarshipsQuery.map(async (scholarship) => {
      // ุฌูุจ ุงูุชุตููู
      let category = null;
      if (scholarship.categoryId) {
        const [categoryData] = await db
          .select()
          .from(categories)
          .where(sql`${categories.id} = ${scholarship.categoryId}`);
        if (categoryData) {
          category = {
            id: categoryData.id,
            name: categoryData.name,
            slug: categoryData.slug
          };
        }
      }

      // ุฌูุจ ุงูุฏููุฉ
      let country = null;
      if (scholarship.countryId) {
        const [countryData] = await db
          .select()
          .from(countries)
          .where(sql`${countries.id} = ${scholarship.countryId}`);
        if (countryData) {
          country = {
            id: countryData.id,
            name: countryData.name,
            slug: countryData.slug
          };
        }
      }

      // ุฌูุจ ุงููุณุชูู ุงูุฏุฑุงุณู
      let level = null;
      if (scholarship.levelId) {
        const [levelData] = await db
          .select()
          .from(levels)
          .where(sql`${levels.id} = ${scholarship.levelId}`);
        if (levelData) {
          level = {
            id: levelData.id,
            name: levelData.name,
            slug: levelData.slug
          };
        }
      }

      // ุชุญููู ูุงุฆู ุงูููุญุฉ ุฅูู ูุงุฆู ูุงุจู ููุชุณูุณู (JSON serializable)
      const { 
        id, title, slug, description, amount, currency, university, department, website,
        isFeatured, isFullyFunded, countryId, levelId, categoryId, requirements,
        applicationLink, imageUrl, content, seoTitle, seoDescription, seoKeywords,
        focusKeyword, isPublished
      } = scholarship;
      
      // ุชุญููู ุงูุชูุงุฑูุฎ ุฅูู ุณูุงุณู ูุตูุฉ ูุถูุงู ุฃููุง ูุงุจูุฉ ููุชุณูุณู (JSON serializable)
      const formatDate = (date: Date | string | null | undefined) => {
        if (!date) return null;
        if (date instanceof Date) return date.toISOString();
        return String(date);
      };
      
      const createdAtStr = formatDate(scholarship.createdAt);
      const updatedAtStr = formatDate(scholarship.updatedAt);
      const startDateStr = formatDate(scholarship.startDate);
      const endDateStr = formatDate(scholarship.endDate);
      const deadlineStr = formatDate(scholarship.deadline);

      // ุฅุฑุฌุงุน ูุงุฆู ุฌุฏูุฏ ูุน ุฌููุน ุงููุนูููุงุช ุงููุทููุจุฉ
      return {
        id, 
        title, 
        slug, 
        description, 
        amount, 
        currency, 
        university, 
        department, 
        website,
        isFeatured: scholarship.isFeatured, 
        isFullyFunded: scholarship.isFullyFunded, 
        countryId: scholarship.countryId, 
        levelId: scholarship.levelId, 
        categoryId: scholarship.categoryId, 
        requirements: scholarship.requirements,
        applicationLink: scholarship.applicationLink, 
        imageUrl: scholarship.imageUrl, 
        content, 
        seoTitle: scholarship.seoTitle, 
        seoDescription: scholarship.seoDescription, 
        seoKeywords: scholarship.seoKeywords,
        focusKeyword: scholarship.focusKeyword, 
        isPublished: scholarship.isPublished, 
        createdAt: createdAtStr, 
        updatedAt: updatedAtStr, 
        startDate: startDateStr, 
        endDate: endDateStr, 
        deadline: deadlineStr,
        category, 
        country, 
        level
      };
    });
    
    const featuredScholarships = await Promise.all(featuredScholarshipsPromises);

    return {
      props: {
        categories: categoriesWithCount || [],
        countries: countriesWithCount || [],
        featuredScholarships: featuredScholarships || [],
      },
    };
  } catch (error) {
    console.error('Error fetching homepage data:', error);
    return {
      props: {
        categories: [],
        countries: [],
        featuredScholarships: [],
      },
    };
  }
};